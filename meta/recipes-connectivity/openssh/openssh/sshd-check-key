#! /bin/sh
NAME="$1"
TYPE="$2"

if [ -z "$NAME" ] || [ -z "$TYPE" ]; then
    echo "Usage: $0 NAME TYPE"
    exit 1
fi


if [ ! -f "$NAME" ]; then
    DIR="$(dirname "$NAME")"

    mkdir -p "$DIR"

    echo "  generating ssh $TYPE key..."
    ssh-keygen -q -f "${NAME}.tmp" -N '' -t $TYPE

    # Move (Atomically rename) files
    mv -f "${NAME}.tmp.pub" "${NAME}.pub"

    # This sync does double duty: Ensuring that the data in the temporary
    # private key file is on disk before the rename, and ensuring that the
    # public key rename is completed before the private key rename, since we
    # switch on the existence of the private key to trigger key generation.
    # This does mean it is possible for the public key to exist, but be garbage
    # but this is OK because in that case the private key won't exist and the
    # keys will be regenerated.
    #
    # In the event that sync understands arguments that limit what it tries to
    # fsync(), we provided them. If it does not, it will simply call sync()
    # which is just as well
    sync "${NAME}.pub" "$DIR" "${NAME}.tmp"

    mv "${NAME}.tmp" "$NAME"
fi

